{"version":3,"file":"react-form-core.cjs.development.js","sources":["../src/form/form.types.ts","../src/form/form.context.ts","../src/utils/debounce.ts","../src/utils/omit.ts","../src/form/form.tsx","../src/form/form.consumer.tsx","../src/field/field.element.tsx","../src/validator/validator.element.tsx","../src/validator/validator.with-validation.tsx"],"sourcesContent":["import { FormEvent, FormHTMLAttributes, ReactNode } from 'react';\n\nexport const initialState = {\n    value: {\n        errors: {},\n        ev: false as any,\n        initialValues: {},\n        resetted: false,\n        setError: (_name: string, _error: any) => {},\n        setInitialValue: (_name: string, _value: any) => {},\n        setSuccess: (_name: string, _success: any) => {},\n        setValue: (_name: string, _value: any) => {},\n        submitted: false,\n        successes: {},\n        values: {}\n    }\n};\nexport interface Values {\n    [key: string]: string\n}\nexport interface Errors {\n    [key: string]: string\n}\nexport interface Successes {\n    [key: string]: string\n}\nexport type OnSubmit = (formChildrenProps: FormChildrenProps) => void;\nexport interface FormProps extends FormHTMLAttributes<HTMLFormElement> {\n    OnSubmit?: OnSubmit\n    wait?: number\n}\nexport type SetInitialValue = (name: string, value: string) => void;\nexport type SetValue = (name: string, value: string) => void;\nexport type SetError = (name: string, error: string | string[] | Promise<any>) => void;\nexport type SetSuccess = (name: string, successes: string | string[] | Promise<any>) => void;\nexport interface FormChildrenProps {\n    errors: Errors\n    ev: FormEvent<HTMLFormElement>\n    initialValues: Values\n    resetted: boolean\n    setError: SetError\n    setInitialValue: SetInitialValue\n    setSuccess: SetSuccess\n    setValue: SetValue\n    submitted: boolean\n    successes: Successes\n    values: Values\n}\nexport interface FormChildren {\n    children: (formContext: FormChildrenProps) => ReactNode\n    [key: string]: any\n}\n","import * as React from 'react';\nimport { FormChildrenProps, initialState } from './form.types';\n\nexport const FormContext = React.createContext<FormChildrenProps>(initialState.value);\n","// @see: https://30secondsofcode.org/function#debounce\nexport const debounce = (fn: (...args: any[]) => void, ms = 0) => {\n    let timeout: any;\n\n    return (...args: any[]) => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => {\n            timeout = null;\n            fn.apply(null, args);\n        }, ms);\n    };\n};\n","interface Obj {\n    [key: string]: any\n}\n\n// https://30secondsofcode.org/object#omit\nexport const omit = (obj: Obj, arr: any[]) => {\n    return Object.keys(obj).reduce((acc: Obj, key: string) => {\n        if (!arr.includes(key)) {\n            acc[key] = obj[key];\n        }\n\n        return acc;\n    }, {});\n};\n","import * as React from 'react';\nimport { FormProps } from './form.types';\nimport { FormContext } from './form.context';\nimport { debounce, omit } from '../utils';\n\nexport const Form = ({ children, onReset, onSubmit, wait, ...rest }: FormProps) => {\n    const [state, setState] = React.useState({\n        errors: {},\n        ev: false as any,\n        initialValues: {},\n        resetted: false,\n        submitted: false,\n        successes: {},\n        values: {},\n        setError: debounce(handleError, !wait ? 750 : wait),\n        setInitialValue: handleInitialValue,\n        setSuccess: debounce(handleSuccess, !wait ? 750 : wait),\n        setValue: handleValue\n    });\n\n    React.useEffect(() => {\n        const submitted = state.submitted;\n\n        if (submitted && onSubmit) {\n            onSubmit({ ...state } as any);\n\n            setState((prevState) => {\n                return {\n                    ...prevState,\n                    submitted: false\n                };\n            });\n        }\n    }, [onSubmit, state]);\n\n    React.useEffect(() => {\n        const resetted = state.resetted;\n        const formEvent = state.ev;\n\n        if (formEvent && resetted && onReset) {\n            onReset({ ev: formEvent, ...state } as any);\n\n            setState((prevState) => {\n                return {\n                    ...prevState,\n                    resetted: false\n                };\n            });\n        }\n    }, [onReset, state]);\n\n    function handleInitialValue(name: string, initialValue: any) {\n        setState((prevState) => {\n            return {\n                ...prevState,\n                initialValues: {\n                    ...prevState.initialValues,\n                    [name]: initialValue\n                },\n                values: {\n                    ...prevState.values,\n                    [name]: initialValue\n                }\n            };\n        });\n    }\n\n    function handleValue(name: string, newValue: any) {\n        setState((prevState) => {\n            return {\n                ...prevState,\n                errors: omit(prevState.errors, [name]),\n                submitted: false,\n                successes: omit(state.successes, [name]),\n                values: {\n                    ...prevState.values,\n                    [name]: newValue\n                }\n            };\n        });\n    }\n\n    function handleError(name: string, error: any) {\n        setState((prevState) => {\n            return {\n                ...prevState,\n                errors: {\n                    ...prevState.errors,\n                    [name]: error\n                }\n            };\n        });\n    }\n\n    function handleSuccess(name: string, success: any) {\n        setState((prevState) => {\n            return {\n                ...prevState,\n                successes: {\n                    ...prevState.successes,\n                    [name]: success\n                }\n            };\n        });\n    }\n\n    function handleSubmit(ev: React.FormEvent<HTMLFormElement>) {\n        ev.preventDefault();\n        ev.persist();\n\n        setState((prevState) => {\n            return {\n                ...prevState,\n                ev,\n                submitted: true\n            };\n        });\n    }\n\n    function handleReset(ev: React.FormEvent<HTMLFormElement>) {\n        ev.preventDefault();\n        ev.persist();\n\n        setState((prevState) => {\n            return {\n                ...prevState,\n                errors: {},\n                ev,\n                resetted: true,\n                successes: {},\n                values: prevState.initialValues\n            };\n        });\n    }\n\n    return (\n        <FormContext.Provider value={state}>\n            <form {...rest} onSubmit={handleSubmit} onReset={handleReset}>\n                {children}\n            </form>\n        </FormContext.Provider>\n    );\n};\n","import * as React from 'react';\nimport { FormContext } from './form.context';\nimport { FormChildren } from './form.types';\n\nexport const FormConsumer = ({ children }: FormChildren) => {\n    return <FormContext.Consumer>{children}</FormContext.Consumer>;\n};\n","import * as React from 'react';\nimport { FormContext } from '../form';\nimport { FieldProps } from './fields.types';\n\nexport const Field = ({ checked, children, name, onChange, value, ...rest }: FieldProps) => {\n    const { setInitialValue, setValue, values } = React.useContext(FormContext);\n    const valueByName = values[name];\n    const childrenProps = children.props;\n    const childrenValue = childrenProps.value;\n    const hasCheckedAttr = /checkbox|radio/.test(childrenProps?.type);\n    const noneValue = childrenProps.multiple ? [''] : '';\n    const valueAttr = hasCheckedAttr\n        ? { checked: valueByName === value }\n        : { value: valueByName || noneValue };\n\n    const [onChangeEvent, setOnChangeEvent] = React.useState<any>();\n    const [fieldValue, setFieldValue] = React.useState<any>(valueByName);\n\n    if (!name) {\n        throw new Error('Error: Please, you have to add a name to the form field');\n    }\n\n    React.useEffect(() => {\n        let timer = 0;\n\n        // handle elements with on change\n        if (onChangeEvent && onChange) {\n            onChangeEvent && onChange && onChange(onChangeEvent);\n            timer = setTimeout(() => {return setValue(name, fieldValue); });\n        } else if (typeof fieldValue !== 'undefined') {\n            // avoid radio fields not checked\n            setValue(name, fieldValue);\n        }\n\n        // handle radio fields not checked\n        if (childrenProps?.type === 'radio') {\n            valueByName !== value && setFieldValue(undefined);\n        }\n\n        return () => {\n            timer && clearTimeout(timer as number);\n        };\n    }, [fieldValue, setValue]);\n\n    // Set initial values\n    React.useEffect(() => {\n        const checkedValue = childrenProps.checked ? childrenValue : '';\n        const initialValue = hasCheckedAttr ? checkedValue : childrenValue;\n\n        initialValue !== '' && setInitialValue(name, initialValue);\n        initialValue !== '' && setValue(name, initialValue);\n    }, []);\n\n    function handleChange(ev: React.ChangeEvent<HTMLFormElement>) {\n        const target = ev.target;\n        const newValue =\n            target.type === 'select-multiple'\n                ? Array.from(target.selectedOptions).map((option: any) => {\n                    return option.value;\n                })\n                : target.value;\n        const checkedValue = target.checked === true ? newValue : '';\n\n        ev.persist();\n\n        setFieldValue(hasCheckedAttr ? checkedValue : newValue);\n        setOnChangeEvent(ev);\n    }\n\n    return React.cloneElement(children, {\n        ...rest,\n        ...valueAttr,\n        name,\n        onChange: handleChange\n    });\n};\n","import * as React from 'react';\nimport { FormContext } from '../form';\nimport { ValidatorProps } from './validator.types';\n\nexport const Validator = ({ children, validation, name, ...rest }: ValidatorProps) => {\n    const { errors, setError, setSuccess, successes, values } = React.useContext(FormContext);\n\n    const getMessage = (onChange?: (ev: React.ChangeEvent<HTMLFormElement>) => any) => {\n        return (ev: React.ChangeEvent<HTMLFormElement>) => {\n            ev.preventDefault();\n\n            validation({\n                errors,\n                setError: (error) => {return setError(name, error); },\n                setSuccess: (success) => {return setSuccess(name, success); },\n                successes,\n                value: ev.target.value,\n                values\n            });\n\n            onChange && onChange(ev);\n        };\n    };\n    const element = children as React.ReactElement;\n\n    return React.cloneElement(element, {\n        ...rest,\n        onChange: getMessage(element?.props?.onChange)\n    });\n};\n","import * as React from 'react';\nimport { Validator } from './validator.element';\n\nexport const withValidation = ({ name, validation, ...rest }: any) => {\n    return (FormField: React.ComponentType<any>) => {\n        return (\n            <Validator name={name} validation={validation}>\n                <FormField name={name} {...rest} />\n            </Validator>\n        );\n    };\n};\n"],"names":["initialState","value","errors","ev","initialValues","resetted","setError","_name","_error","setInitialValue","_value","setSuccess","_success","setValue","submitted","successes","values","FormContext","React","debounce","fn","ms","timeout","args","clearTimeout","setTimeout","apply","omit","obj","arr","Object","keys","reduce","acc","key","includes","Form","children","onReset","onSubmit","wait","rest","handleError","handleInitialValue","handleSuccess","handleValue","state","setState","prevState","formEvent","name","initialValue","newValue","error","success","handleSubmit","preventDefault","persist","handleReset","Provider","FormConsumer","Consumer","Field","onChange","valueByName","childrenProps","props","childrenValue","hasCheckedAttr","test","type","noneValue","multiple","valueAttr","checked","onChangeEvent","setOnChangeEvent","fieldValue","setFieldValue","Error","timer","undefined","checkedValue","handleChange","target","Array","from","selectedOptions","map","option","Validator","validation","getMessage","element","withValidation","FormField"],"mappings":"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"}